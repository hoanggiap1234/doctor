package com.viettel.etc.repositories.tables;import com.viettel.etc.repositories.tables.entities.DoctorsEntity;import com.viettel.etc.utils.Constants;import org.springframework.data.jpa.repository.JpaRepository;import org.springframework.data.jpa.repository.Modifying;import org.springframework.data.jpa.repository.Query;import org.springframework.stereotype.Repository;import java.util.List;/** * Autogen class Repository Interface: Create Repository For Table Name Doctors * * @author ToolGen * @date Wed Aug 19 14:21:51 ICT 2020 */@Repositorypublic interface DoctorsRepositoryJPA extends JpaRepository<DoctorsEntity, Integer> {	Boolean existsByPhoneNumber(String phone);	Boolean existsByPhoneNumberAndDoctorIdNot(String phone, int doctorId);	Boolean existsByEmail(String phone);	Boolean existsByEmailAndDoctorIdNot(String email, int doctorId);	@Modifying	@Query("update DoctorsEntity d set d.isDelete=?2 where d.doctorId=?1")	void updateDeleteStatus(int id, boolean status);	default void deleteDoctorById(int id) {		updateDeleteStatus(id, Constants.IS_DELETE);	}	DoctorsEntity findByDoctorId(int doctorId);	DoctorsEntity findByDoctorIdAndIsActiveAndIsDelete(int doctorId, boolean isActive, boolean isDelete);	DoctorsEntity findByPhoneNumber(String phoneNumber);	@Query("select d.phoneNumber from DoctorsEntity d where d.isActive = 1 and d.isDelete = 0 and d.keycloakUserId = ?1")	String getPhoneNumberByKeycloakId(String keyCloakUserId);	@Query("select d.keycloakUserId from DoctorsEntity d where d.isActive = 1 and  d.isDelete = 0 and d.doctorCode = ?1 and d.fullname = ?2")	String getKeycloakIdByDoctorCodeAndFullname(String doctorCode, String fullname);}