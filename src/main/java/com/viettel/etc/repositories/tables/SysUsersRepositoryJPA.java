package com.viettel.etc.repositories.tables;import com.viettel.etc.repositories.tables.entities.SysUsersEntity;import com.viettel.etc.utils.Constants;import org.springframework.data.jpa.repository.JpaRepository;import org.springframework.data.jpa.repository.Modifying;import org.springframework.data.jpa.repository.Query;import org.springframework.stereotype.Repository;import java.util.ArrayList;import java.util.Arrays;import java.util.List;import java.util.stream.Collectors;/** * Autogen class Repository Interface: Create Repository For Table Name Sys_users * * @author ToolGen * @date Fri Oct 30 16:12:16 ICT 2020 */@Repositorypublic interface SysUsersRepositoryJPA extends JpaRepository<SysUsersEntity, Integer> {	SysUsersEntity findFirstByKeycloakUserId(String keyclock);	@Modifying	@Query("update SysUsersEntity s set s.isDelete=?3 where s.id = ?1 and s.type = ?2")	void updateDeleteStatus(Integer id, Integer type, boolean status);	default void deleteByIdAndType(Integer id, Integer type) {		updateDeleteStatus(id, type, Constants.IS_DELETE);	}	SysUsersEntity findByIdAndTypeAndIsActiveAndIsDelete(Integer id, Integer type, Integer isActive, Integer isDelete);	@Query("select s.healthfacilitiesCodes from SysUsersEntity s where s.keycloakUserId=?1")	String getHealthfacilitiesCodes(String keyClock);	default List<String> getHealthfacilitiesCodeArr(String keyClock) {		String codes = getHealthfacilitiesCodes(keyClock);		if (codes == null) {			return new ArrayList<>();		}		String[] arr = codes.split(",");		return Arrays.stream(arr).collect(Collectors.toList());	}}