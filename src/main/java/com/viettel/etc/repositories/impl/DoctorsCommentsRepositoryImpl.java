package com.viettel.etc.repositories.impl;import com.viettel.etc.dto.DoctorsCommentsDTO;import com.viettel.etc.repositories.DoctorsCommentsRepository;import com.viettel.etc.utils.Constants;import com.viettel.etc.xlibrary.core.entities.ResultSelectEntity;import com.viettel.etc.xlibrary.core.repositories.CommonDataBaseRepository;import org.springframework.stereotype.Repository;import java.util.HashMap;/** * Autogen class Repository Impl: * * @author ToolGen * @date Wed Dec 23 14:47:05 ICT 2020 */@Repositorypublic class DoctorsCommentsRepositoryImpl extends CommonDataBaseRepository implements DoctorsCommentsRepository {	/**	 * Danh sach comment bac si	 *	 * @param dto: params client truyen len	 * @return	 */	@Override	public ResultSelectEntity getDoctorComments(DoctorsCommentsDTO dto) {		StringBuilder sql = new StringBuilder();		sql.append("" +				"select " +				"  dc.comment_id as commentId , " +				"  dc.patient_id as patientId , " +				"  pt.fullname as patientName, " +				"  pt.avatar as patientAvatar, " +				"  dc.comments, " +				"  dc.point_evaluation as pointEvaluation, " +				"  dc.create_date as createDate, " +				"  dc.update_date as updateDate " +				"from " +				"  doctors_comments dc " +				"inner join ( " +				"  select " +				"    patient_id , fullname, avatar " +				"  from " +				"    patients) pt on " +				"  pt.patient_id = dc.patient_id " +				"where " +				"  dc.is_active = :isActive " +				"  and dc.is_delete = :isDelete " +				"  and dc.doctor_id = :doctorId order by dc.comment_id desc");		HashMap<String, Object> arrParams = new HashMap<>();		arrParams.put("isActive", Constants.IS_ACTIVE);		arrParams.put("isDelete", Constants.IS_NOT_DELETE);		arrParams.put("doctorId", dto.getDoctorId());		Integer start = Constants.START_RECORD_DEFAULT;		if (dto != null && dto.getStartrecord() != null) {			start = dto.getStartrecord();		}		Integer pageSize = Constants.PAGE_SIZE_DEFAULT;		if (dto != null && dto.getPagesize() != null) {			pageSize = dto.getPagesize();		}		return getListDataAndCount(sql, arrParams, start, pageSize, DoctorsCommentsDTO.class);	}}