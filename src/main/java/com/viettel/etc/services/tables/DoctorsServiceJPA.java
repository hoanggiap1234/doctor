package com.viettel.etc.services.tables;import com.viettel.etc.dto.RequestChangePasswordDTO;import com.viettel.etc.kafka.domain.ChangeStatusActiveDTO;import com.viettel.etc.repositories.tables.DoctorsRepositoryJPA;import com.viettel.etc.repositories.tables.entities.DoctorsEntity;import com.viettel.etc.services.KeycloakService;import com.viettel.etc.services.MessageService;import com.viettel.etc.utils.*;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.core.Authentication;import org.springframework.stereotype.Service;import java.io.IOException;/** * Autogen class: Create Service For Table Name Doctors * * @author ToolGen * @date Wed Aug 19 14:21:51 ICT 2020 */@Servicepublic class DoctorsServiceJPA {	@Autowired	DoctorsRepositoryJPA doctors;	@Autowired	KeycloakService keycloakService;	@Autowired	MessageService messageService;	public boolean existByPhone(String phone) {		return doctors.existsByPhoneNumber(phone);	}	public Object changePassword(RequestChangePasswordDTO requestChangePasswordDTO, Authentication authentication) throws TeleCareException, IOException {		String newPassword = requestChangePasswordDTO.getNewPassword();		String oldPassword = requestChangePasswordDTO.getOldPassword();		if (newPassword.equals(oldPassword)) {			throw new TeleCareException(messageService.getMessage(Constants.ERR_NEW_PSW_EQUAL_OLD_PSW, requestChangePasswordDTO.getLanguage()));		}		String keycloakUserId = FnCommon.getUserIdLogin(authentication);		String phoneNumber = doctors.getPhoneNumberByKeycloakId(keycloakUserId);		if (phoneNumber == null) {			throw new TeleCareException(messageService.getMessage(Constants.ERR_DATA_DOCTOR_NOT_EXIST, requestChangePasswordDTO.getLanguage()));		}		String token = keycloakService.loginDoctor(phoneNumber, requestChangePasswordDTO.getOldPassword());		if (token == null) {			throw new TeleCareException(messageService.getMessage(Constants.ERR_WRONG_OLD_PSW, requestChangePasswordDTO.getLanguage()));		}		if (!FnCommon.validPassword(requestChangePasswordDTO.getNewPassword())) {			throw new TeleCareException(messageService.getMessage(Constants.ERR_PSW_INVALID, requestChangePasswordDTO.getLanguage()));		}		keycloakService.resetPassword(keycloakUserId, newPassword, requestChangePasswordDTO.getLanguage());		return "Cập nhật mật khẩu thành công";	}	// change password for 3rd party	public Object changePassword3rdParty(RequestChangePasswordDTO requestChangePasswordDTO, Authentication authentication) throws TeleCareException, IOException {		TelecareUserEntity telecareUserEntity = FnCommon.getTelecareUserInfo(authentication);		if ((telecareUserEntity != null && !telecareUserEntity.isAdmin()) || telecareUserEntity == null) {			throw new TeleCareException(ErrorApp.ERR_USER_PERMISSION);		}		String newPassword = requestChangePasswordDTO.getNewPassword();		String oldPassword = requestChangePasswordDTO.getOldPassword();		if (newPassword.equals(oldPassword)) {			throw new TeleCareException(messageService.getMessage(Constants.ERR_NEW_PSW_EQUAL_OLD_PSW, requestChangePasswordDTO.getLanguage()));		}		String userName = requestChangePasswordDTO.getUserName();		String fullname = requestChangePasswordDTO.getFullname();		if (userName == null || fullname == null) {			throw new TeleCareException(messageService.getMessage(Constants.ERR_DATA_DOCTOR_NOT_EXIST, requestChangePasswordDTO.getLanguage()));		}		String doctorCode = FnCommon.nameToNameCode(fullname) + userName;		String keycloakUserId = doctors.getKeycloakIdByDoctorCodeAndFullname(doctorCode, fullname);		if (keycloakUserId == null) {			throw new TeleCareException(messageService.getMessage(Constants.ERR_DATA_DOCTOR_NOT_EXIST, requestChangePasswordDTO.getLanguage()));		}		String token = keycloakService.loginDoctor(userName, requestChangePasswordDTO.getOldPassword());		if (token == null) {			throw new TeleCareException(messageService.getMessage(Constants.ERR_WRONG_OLD_PSW, requestChangePasswordDTO.getLanguage()));		}		if (!FnCommon.validPassword(requestChangePasswordDTO.getNewPassword())) {			throw new TeleCareException(messageService.getMessage(Constants.ERR_PSW_INVALID, requestChangePasswordDTO.getLanguage()));		}		keycloakService.resetPassword(keycloakUserId, newPassword, requestChangePasswordDTO.getLanguage());		return "Cập nhật mật khẩu thành công";	}	public void changeStatusActive(ChangeStatusActiveDTO changeStatusActiveDTO) throws TeleCareException {		DoctorsEntity doctorEntity = doctors.findByDoctorIdAndIsActiveAndIsDelete(changeStatusActiveDTO.getId(), Constants.IS_ACTIVE, Constants.IS_NOT_DELETE);		if (doctorEntity == null) {			throw new TeleCareException(ErrorApp.ERR_DATA_DOCTOR_NOT_EXIST);		}		doctorEntity.setIsActive(changeStatusActiveDTO.getIsActive() == 1 ? true : false);		doctors.save(doctorEntity);	}}